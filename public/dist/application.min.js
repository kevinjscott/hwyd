"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ui.select","ngSanitize","angularMoment"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){if(void 0!==Authentication.user.roles&&Authentication.user.roles.indexOf(role)!==-1)return allowed=!0,!0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]);
!function(app){"use strict";app.registerModule("customers")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("customquestions")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("schools")}(ApplicationConfiguration);
!function(app){"use strict";app.registerModule("teachers")}(ApplicationConfiguration);
"use strict";ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]);
"use strict";angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]);
"use strict";angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return reset()}),toggleClasses=function(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(attrs.showErrors.indexOf("skipFormGroupCheck")===-1&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Customers",state:"customers",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","customers",{title:"List Customers",state:"customers.list"}),menuService.addSubMenuItem("topbar","customers",{title:"Create Customer",state:"customers.create",roles:["user"]})}angular.module("customers").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("customers",{"abstract":!0,url:"/customers",template:"<ui-view/>"}).state("customers.list",{url:"",templateUrl:"modules/customers/client/views/list-customers.client.view.html",controller:"CustomersListController",controllerAs:"vm",data:{pageTitle:"Customers List"}}).state("customers.create",{url:"/create",templateUrl:"modules/customers/client/views/form-customer.client.view.html",controller:"CustomersController",controllerAs:"vm",resolve:{customerResolve:newCustomer},data:{roles:["user","admin"],pageTitle:"Customers Create"}}).state("customers.edit",{url:"/:customerId/edit",templateUrl:"modules/customers/client/views/form-customer.client.view.html",controller:"CustomersController",controllerAs:"vm",resolve:{customerResolve:getCustomer},data:{roles:["user","admin"],pageTitle:"Edit Customer {{ customerResolve.name }}"}}).state("customers.view",{url:"/:customerId",templateUrl:"modules/customers/client/views/view-customer.client.view.html",controller:"CustomersController",controllerAs:"vm",resolve:{customerResolve:getCustomer},data:{pageTitle:"Customer {{ customerResolve.name }}"}}).state("customers.confirm",{url:"/c/:customerId",templateUrl:"modules/customers/client/views/confirm-customer.client.view.html",controller:"CustomersController",controllerAs:"vm",resolve:{customerResolve:getCustomer},data:{pageTitle:"Customer {{ customerResolve.name }}"}})}function getCustomer($stateParams,CustomersService){return CustomersService.get({customerId:$stateParams.customerId}).$promise}function newCustomer(CustomersService){return new CustomersService}angular.module("customers").config(routeConfig),routeConfig.$inject=["$stateProvider"],getCustomer.$inject=["$stateParams","CustomersService"],newCustomer.$inject=["CustomersService"]}();
!function(){"use strict";function CustomersController($scope,$state,$window,Authentication,customer,moment){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.customer.$remove($state.go("customers.list"))}function save(isValid){function successCallback(res){$state.go("customers.view",{customerId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.customer._id?vm.customer.$update(successCallback,errorCallback):vm.customer.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.customerForm"),!1)}var vm=this;vm.authentication=Authentication,vm.customer=customer,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.teachersNames=function(separator){var k=vm.customer.kids;k=_.map(k,"teacher.name"),k=_.uniq(k),k=_.sortBy(k);var result=s.toSentenceSerial(k,", ",separator);return result},vm.kidsNames=function(separator){var k=vm.customer.kids;k=_.map(k,"name"),k=_.sortBy(k);var result=s.toSentenceSerial(k,", ",separator);return result},vm.convertTime1=function(timeString){return moment(timeString,"H:mm").format("LT")}}angular.module("customers").controller("CustomersController",CustomersController).constant("s",window.s).constant("_",window._).run(["$rootScope",function($rootScope){$rootScope.s=window.s,$rootScope._=window._}]),CustomersController.$inject=["$scope","$state","$window","Authentication","customerResolve","moment"]}();
!function(){"use strict";function CustomersListController(CustomersService){var vm=this;vm.customers=CustomersService.query()}angular.module("customers").controller("CustomersListController",CustomersListController),CustomersListController.$inject=["CustomersService"]}();
!function(){"use strict";function CustomersService($resource){return $resource("api/customers/:customerId",{customerId:"@_id"},{update:{method:"PUT"}})}angular.module("customers").factory("CustomersService",CustomersService),CustomersService.$inject=["$resource"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Customquestions",state:"customquestions",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","customquestions",{title:"List Customquestions",state:"customquestions.list"}),menuService.addSubMenuItem("topbar","customquestions",{title:"Create Customquestion",state:"customquestions.create",roles:["user"]})}angular.module("customquestions").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("customquestions",{"abstract":!0,url:"/customquestions",template:"<ui-view/>"}).state("editquestion2",{"abstract":!0,url:"/q",template:"<ui-view/>"}).state("editquestion2.editquestion",{url:"/:teacherId/:encryptedDate",templateUrl:"modules/customquestions/client/views/form-customquestion.client.view.html",controller:"CustomquestionsController",controllerAs:"vm",resolve:{customquestionResolve:newCustomquestion,stateParamsResolve:getStateParams},data:{pageTitle:"Add a custom question"}}).state("customquestions.list",{url:"",templateUrl:"modules/customquestions/client/views/list-customquestions.client.view.html",controller:"CustomquestionsListController",controllerAs:"vm",data:{pageTitle:"Customquestions List"}}).state("customquestions.create",{url:"/create",templateUrl:"modules/customquestions/client/views/form-customquestion.client.view.html",controller:"CustomquestionsController",controllerAs:"vm",resolve:{customquestionResolve:newCustomquestion},data:{pageTitle:"Customquestions Create"}}).state("customquestions.edit",{url:"/:customquestionId/edit",templateUrl:"modules/customquestions/client/views/form-customquestion.client.view.html",controller:"CustomquestionsController",controllerAs:"vm",resolve:{customquestionResolve:getCustomquestion},data:{pageTitle:"Edit Customquestion {{ customquestionResolve.name }}"}}).state("customquestions.view",{url:"/:customquestionId",templateUrl:"modules/customquestions/client/views/view-customquestion.client.view.html",controller:"CustomquestionsController",controllerAs:"vm",resolve:{customquestionResolve:getCustomquestion,stateParamsResolve:getStateParams},data:{pageTitle:"Customquestion {{ customquestionResolve.name }}"}})}function getTeacher($stateParams,TeachersService){return TeachersService.get({teacherId:$stateParams.teacherId}).$promise}function getCustomquestion($stateParams,CustomquestionsService){return CustomquestionsService.get({customquestionId:$stateParams.customquestionId}).$promise}function getStateParams($stateParams){return $stateParams}function newCustomquestion($stateParams,CustomquestionsService,TeachersService){var s=new CustomquestionsService;return getTeacher($stateParams,TeachersService).then(function(teacher){s.teacher=teacher._id,s.teachername=teacher.name}),s}angular.module("customquestions").config(routeConfig),routeConfig.$inject=["$stateProvider"],getTeacher.$inject=["$stateParams","TeachersService"],getCustomquestion.$inject=["$stateParams","CustomquestionsService"],getStateParams.$inject=["$stateParams"],newCustomquestion.$inject=["$stateParams","CustomquestionsService","TeachersService"]}();
!function(){"use strict";function CustomquestionsController($scope,$state,$window,Authentication,customquestion,routeParams,moment){function customQuestion(){var d=convertDate("l"),result=_.find(vm.customquestion.teacher.customitems,["date",d]);return result?result.message:null}function convertDate(token){var u=moment(vm.routeParams.encryptedDate,"x");return u=u.isValid()?u.format(token):null}function remove(){$window.confirm("Are you sure you want to delete?")&&vm.customquestion.$remove($state.go("customquestions.list"))}function save(isValid){function successCallback(res){$state.go("customquestions.view",{customquestionId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.customquestion._id?vm.customquestion.$update(successCallback,errorCallback):vm.customquestion.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.customquestionForm"),!1)}var vm=this;vm.customQuestion=customQuestion,vm.authentication=Authentication,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.routeParams=routeParams,vm.customquestion=customquestion,routeParams.encryptedDate&&(vm.customquestion.date=routeParams.encryptedDate,vm.customquestion.teacher=routeParams.teacherId),vm.convertDate=convertDate}angular.module("customquestions").controller("CustomquestionsController",CustomquestionsController),CustomquestionsController.$inject=["$scope","$state","$window","Authentication","customquestionResolve","stateParamsResolve","moment"]}();
!function(){"use strict";function CustomquestionsListController(CustomquestionsService){var vm=this;vm.customquestions=CustomquestionsService.query()}angular.module("customquestions").controller("CustomquestionsListController",CustomquestionsListController),CustomquestionsListController.$inject=["CustomquestionsService"]}();
!function(){"use strict";function CustomquestionsService($resource){return $resource("api/customquestions/:customquestionId",{customquestionId:"@_id"},{update:{method:"PUT"}})}angular.module("customquestions").factory("CustomquestionsService",CustomquestionsService),CustomquestionsService.$inject=["$resource"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Schools",state:"schools",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","schools",{title:"List Schools",state:"schools.list"}),menuService.addSubMenuItem("topbar","schools",{title:"Create School",state:"schools.create",roles:["user"]})}angular.module("schools").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("schools",{"abstract":!0,url:"/schools",template:"<ui-view/>"}).state("schools.list",{url:"",templateUrl:"modules/schools/client/views/list-schools.client.view.html",controller:"SchoolsListController",controllerAs:"vm",data:{pageTitle:"Schools List"}}).state("schools.create",{url:"/create",templateUrl:"modules/schools/client/views/form-school.client.view.html",controller:"SchoolsController",controllerAs:"vm",resolve:{schoolResolve:newSchool,customerResolve:newCustomer},data:{roles:["user","admin"],pageTitle:"Schools Create"}}).state("schools.edit",{url:"/:schoolId/edit",templateUrl:"modules/schools/client/views/form-school.client.view.html",controller:"SchoolsController",controllerAs:"vm",resolve:{schoolResolve:getSchool,customerResolve:newCustomer},data:{roles:["user","admin"],pageTitle:"Edit School {{ schoolResolve.name }}"}}).state("schools.view",{url:"/:schoolId",templateUrl:"modules/schools/client/views/view-school.client.view.html",controller:"SchoolsController",controllerAs:"vm",resolve:{schoolResolve:getSchool,customerResolve:newCustomer},data:{pageTitle:"School {{ schoolResolve.name }}"}}).state("schools.signup",{url:"/:schoolId/signup",templateUrl:"modules/schools/client/views/form-signup.client.view.html",controller:"SchoolsController",controllerAs:"vm",resolve:{schoolResolve:getSchool,customerResolve:newCustomer},data:{pageTitle:"School {{ schoolResolve.name }}"}})}function getSchool($stateParams,SchoolsService){return SchoolsService.get({schoolId:$stateParams.schoolId}).$promise}function newSchool(SchoolsService){return new SchoolsService}function newCustomer(CustomersService){return new CustomersService}angular.module("schools").config(routeConfig),routeConfig.$inject=["$stateProvider"],getSchool.$inject=["$stateParams","SchoolsService"],newSchool.$inject=["SchoolsService"],newCustomer.$inject=["CustomersService"]}();
!function(){"use strict";function SchoolsListController(SchoolsService){var vm=this;vm.schools=SchoolsService.query()}angular.module("schools").controller("SchoolsListController",SchoolsListController),SchoolsListController.$inject=["SchoolsService"]}();
!function(){"use strict";function SchoolsController($scope,$state,$timeout,$window,Authentication,school,customer,moment){function remove(){$window.confirm("Are you sure you want to delete?")&&vm.school.$remove($state.go("schools.list"))}function save(isValid){function successCallback(res){$state.go("schools.view",{schoolId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.school._id?vm.school.$update(successCallback,errorCallback):vm.school.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.schoolForm"),!1)}function saveCustomer(isValid){function successCallback(res){$state.go("customers.confirm",{customerId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?(vm.customer.name=vm.customer.email,vm.customer.delivery.address=vm.customer.email,vm.customer.delivery.method="email",vm.customer.delivery.time=moment(vm.customer.delivery.time).format("H:mm"),void(vm.customer._id?vm.customer.$update(successCallback,errorCallback):vm.customer.$save(successCallback,errorCallback))):($scope.$broadcast("show-errors-check-validity","vm.form.customerForm"),!1)}function addKid(){vm.customer.kids.push({});for(var i=0;i<6;i++)focusOn("kidname"+i)}function focusOn(id){$timeout(function(){var element=$window.document.getElementById(id);element&&element.focus()})}var vm=this;vm.authentication=Authentication,vm.school=school,vm.customer=customer,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.saveCustomer=saveCustomer,vm.addKid=addKid,vm.customer.kids=[{}],vm.customer.delivery={},vm.customer.delivery.time="Tue Nov 22 2016 15:00:00 GMT-0500 (EST)"}angular.module("schools").controller("SchoolsController",SchoolsController),SchoolsController.$inject=["$scope","$state","$timeout","$window","Authentication","schoolResolve","customerResolve","moment"]}();
!function(){"use strict";function SchoolsService($resource){return $resource("api/schools/:schoolId",{schoolId:"@_id"},{update:{method:"PUT"}})}angular.module("schools").factory("SchoolsService",SchoolsService),SchoolsService.$inject=["$resource"]}();
!function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Teachers",state:"teachers",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","teachers",{title:"List Teachers",state:"teachers.list"}),menuService.addSubMenuItem("topbar","teachers",{title:"Create Teacher",state:"teachers.create",roles:["user"]})}angular.module("teachers").run(menuConfig),menuConfig.$inject=["Menus"]}();
!function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("teachers",{"abstract":!0,url:"/teachers",template:"<ui-view/>"}).state("teachers.list",{url:"",templateUrl:"modules/teachers/client/views/list-teachers.client.view.html",controller:"TeachersListController",controllerAs:"vm",data:{pageTitle:"Teachers List"}}).state("teachers.create",{url:"/create",templateUrl:"modules/teachers/client/views/form-teacher.client.view.html",controller:"TeachersController",controllerAs:"vm",resolve:{teacherResolve:newTeacher},data:{roles:["user","admin"],pageTitle:"Teachers Create"}}).state("teachers.edit",{url:"/:teacherId/edit",templateUrl:"modules/teachers/client/views/form-teacher.client.view.html",controller:"TeachersController",controllerAs:"vm",resolve:{teacherResolve:getTeacher},data:{roles:["user","admin"],pageTitle:"Edit Teacher {{ teacherResolve.name }}"}}).state("teachers.view",{url:"/:teacherId",templateUrl:"modules/teachers/client/views/view-teacher.client.view.html",controller:"TeachersController",controllerAs:"vm",resolve:{teacherResolve:getTeacher},data:{pageTitle:"Teacher {{ teacherResolve.name }}"}})}function getTeacher($stateParams,TeachersService){return TeachersService.get({teacherId:$stateParams.teacherId}).$promise}function newTeacher(TeachersService){return new TeachersService}angular.module("teachers").config(routeConfig),routeConfig.$inject=["$stateProvider"],getTeacher.$inject=["$stateParams","TeachersService"],newTeacher.$inject=["TeachersService"]}();
!function(){"use strict";function TeachersListController(TeachersService){var vm=this;vm.teachers=TeachersService.query()}angular.module("teachers").controller("TeachersListController",TeachersListController),TeachersListController.$inject=["TeachersService"]}();
!function(){"use strict";function TeachersController($scope,$state,$window,Authentication,teacher,routeParams,moment){function customQuestion(){var d=convertDate("l"),result=_.find(teacher.customitems,["date",d]);return result?result.message:null}function convertDate(token){var u=moment(vm.routeParams.encryptedDate,"x");return u=u.isValid()?u.format(token):null}function remove(){$window.confirm("Are you sure you want to delete?")&&vm.teacher.$remove($state.go("teachers.list"))}function save(isValid){function successCallback(res){$state.go("teachers.view",{teacherId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?void(vm.teacher._id?vm.teacher.$update(successCallback,errorCallback):vm.teacher.$save(successCallback,errorCallback)):($scope.$broadcast("show-errors-check-validity","vm.form.teacherForm"),!1)}function saveQuestion(isValid){function successCallback(res){$state.go("customers.confirm",{customerId:res._id})}function errorCallback(res){vm.error=res.data.message}return isValid?(vm.customer.name=vm.customer.email,vm.customer.delivery.address=vm.customer.email,vm.customer.delivery.method="email",vm.customer.delivery.time=moment(vm.customer.delivery.time).format("H:mm"),void(vm.customer._id?vm.customer.$update(successCallback,errorCallback):vm.customer.$save(successCallback,errorCallback))):($scope.$broadcast("show-errors-check-validity","vm.form.customerForm"),!1)}var vm=this;vm.authentication=Authentication,vm.teacher=teacher,vm.error=null,vm.form={},vm.remove=remove,vm.save=save,vm.saveQuestion=saveQuestion,vm.routeParams=routeParams,vm.date=convertDate,vm.customQuestion=customQuestion}angular.module("teachers").controller("TeachersController",TeachersController),TeachersController.$inject=["$scope","$state","$window","Authentication","teacherResolve","stateParamsResolve","moment"]}();
!function(){"use strict";function TeachersService($resource){return $resource("api/teachers/:teacherId",{teacherId:"@_id"},{update:{method:"PUT"}})}angular.module("teachers").factory("TeachersService",TeachersService),TeachersService.$inject=["$resource"]}();
"use strict";angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]);
"use strict";angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]);
"use strict";angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]);
"use strict";angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}}}]);
"use strict";angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}});
"use strict";angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]);
"use strict";angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]);
"use strict";angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]);
"use strict";angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]);
!function(){"use strict";function templates($templateCache){$templateCache.put("modules/core/views/400.client.view.html",'<h1>Bad Request</h1>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You made a bad request\n</div>\n'),$templateCache.put("modules/core/views/403.client.view.html",'<h1>Forbidden</h1>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span>\n  You are not authorized to access this resource\n</div>\n'),$templateCache.put("modules/core/views/404.client.view.html",'<h1>Page Not Found</h1>\n<div class="alert alert-danger" role="alert">\n  <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>\n  <span class="sr-only">Error:</span> Page Not Found\n</div>\n'),$templateCache.put("modules/core/views/header.client.view.html",'<div class="container" ng-controller="HeaderController">\n  <div class="navbar-header">\n    <button class="navbar-toggle" type="button" ng-click="toggleCollapsibleMenu()">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n    </button>\n    <a ui-sref="home" class="navbar-brand">HWYD</a>\n  </div>\n  <nav class="collapse navbar-collapse" collapse="!isCollapsed" role="navigation">\n    <ul class="nav navbar-nav" ng-if="menu.shouldRender(authentication.user);">\n      <li ng-repeat="item in menu.items | orderBy: \'position\'" ng-if="item.shouldRender(authentication.user);" ng-switch="item.type" ng-class="{ active: $state.includes(item.state), dropdown: item.type === \'dropdown\' }" class="{{item.class}}" dropdown="item.type === \'dropdown\'">\n        <a ng-switch-when="dropdown" class="dropdown-toggle" dropdown-toggle role="button">{{::item.title}}&nbsp;<span class="caret"></span></a>\n        <ul ng-switch-when="dropdown" class="dropdown-menu">\n          <li ng-repeat="subitem in item.items | orderBy: \'position\'" ng-if="subitem.shouldRender(authentication.user);" ui-sref-active="active">\n            <a ui-sref="{{subitem.state}}" ng-bind="subitem.title"></a>\n          </li>\n        </ul>\n        <a ng-switch-default ui-sref="{{item.state}}" ng-bind="item.title"></a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-hide="authentication.user">\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signup">Sign Up</a>\n      </li>\n      <li class="divider-vertical"></li>\n      <li ui-sref-active="active">\n        <a ui-sref="authentication.signin">Sign In</a>\n      </li>\n    </ul>\n    <ul class="nav navbar-nav navbar-right" ng-show="authentication.user">\n      <li class="dropdown" dropdown>\n        <a class="dropdown-toggle user-header-dropdown-toggle" dropdown-toggle role="button">\n          <img ng-src="{{authentication.user.profileImageURL}}" alt="{{authentication.user.displayName}}" class="header-profile-image" />\n          <span ng-bind="authentication.user.displayName"></span> <b class="caret"></b>\n        </a>\n        <ul class="dropdown-menu" role="menu">\n          <li ui-sref-active="active">\n            <a ui-sref="settings.profile">Edit Profile</a>\n          </li>\n          <li ui-sref-active="active">\n            <a ui-sref="settings.picture">Change Profile Picture</a>\n          </li>\n          <li ui-sref-active="active" ng-show="authentication.user.provider === \'local\'">\n            <a ui-sref="settings.password">Change Password</a>\n          </li>\n          <li ui-sref-active="active">\n            <a ui-sref="settings.accounts">Manage Social Accounts</a>\n          </li>\n          <li class="divider"></li>\n          <li>\n            <a href="/api/auth/signout" target="_self">Signout</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n</div>\n'),$templateCache.put("modules/core/views/home.client.view.html",'<section ng-controller="HomeController">\n  <div class="jumbotron text-center">\n    <div class="row">\n      <div class="col-md-6 col-md-offset-3 col-sm-6 col-sm-offset-3 col-xs-12">\n        <h1>HWYD</h1>\n      </div>\n    </div>\n    <br>\n    <div class="row">\n      <p class="lead">\n        Connecting kids, parents, and teachers!\n      </p>\n    </div>\n    <div class="row">\n      <p>\n        <a class="btn btn-primary btn-lg" href="/schools/2a0000000000000000000001/signup">Sign up - it\'s free</a>\n      </p>\n      <p>\n        <a class="btn btn-default" href="/q/1a0000000000000000000001/1480309200000">custom question</a>\n      </p>\n    </div>\n  </div>\n\n</section>\n'),$templateCache.put("modules/customers/views/confirm-customer.client.view.html","<section>\n  <div class=\"page-header\">\n    <h1>You're in!</h1>\n  </div>\n  <p>Every weekday at {{vm.convertTime1(vm.customer.delivery.time)}}, you'll get an email with at least one great question to ask {{vm.kidsNames(' and ')}}.\n  </p>\n  <p>If {{vm.teachersNames(' or ')}} submits a specific question for students, you'll see that, too!\n  </p>\n</section>\n"),$templateCache.put("modules/customers/views/form-customer.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.customer._id ? \'Edit Customer\' : \'New Customer\'}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.customerForm" class="form-horizontal" ng-submit="vm.save(vm.form.customerForm.$valid)" novalidate>\n      <fieldset>\n\n        <div class="form-group" show-errors>\n          <label class="control-label" for="name">Name</label>\n          <input name="name" type="text" ng-model="vm.customer.name" id="name" class="form-control" placeholder="Name" required>\n          <div ng-messages="vm.form.customerForm.name.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Customer name is required.</p>\n          </div>\n        </div>\n\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.customer.email" placeholder="Email" lowercase required>\n          <div ng-messages="vm.form.customerForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n\n        <div class="form-group" show-errors>\n          <label class="control-label" for="time">Daily delivery time</label>\n          <input name="delivery.time" type="text" ng-model="vm.customer.delivery.time" id="time" class="form-control" placeholder="Time (h:mm)" required>\n          <div ng-messages="vm.form.customerForm.delivery.time.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Delivery time is required.</p>\n          </div>\n        </div>\n\n        <div class="form-group" show-errors>\n          <label class="control-label" for="method">Daily delivery method</label>\n          <input name="delivery.method" type="text" ng-model="vm.customer.delivery.method" id="method" class="form-control" placeholder="e.g. \'slack\' (without quotes)" required>\n          <div ng-messages="vm.form.customerForm.delivery.method.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Delivery method is required.</p>\n          </div>\n        </div>\n\n        <div class="form-group" show-errors>\n          <label class="control-label" for="address">Daily delivery address</label>\n          <input name="delivery.address" type="text" ng-model="vm.customer.delivery.address" id="address" class="form-control" placeholder="e.g. \'#customer1\' (without quotes)" required>\n          <div ng-messages="vm.form.customerForm.delivery.address.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Delivery address is required.</p>\n          </div>\n        </div>\n\n        <div class="form-group" show-errors>\n          <label class="control-label" for="address">Teacher</label>\n          <select ng-model="vm.customer.teachers"></select>\n          <div ng-messages="vm.form.customerForm.teacher.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Teacher is required.</p>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.customer._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/customers/views/list-customers.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Customers</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="customer in vm.customers"\n       ui-sref="customers.view({ customerId: customer._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="customer.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="customer.user" ng-bind="customer.user.displayName"></span>\n        <span ng-if="!customer.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="customer.name"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.customers.$resolved && !vm.customers.length">\n    No Customers yet, why don\'t you <a ui-sref="customers.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/customers/views/view-customer.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.customer.name}}</h1>\n  </div>\n  <div class="">\n    <div ng-bind="vm.customer.email"></div>\n    <div ng-bind="vm.customer.delivery.time"></div>\n    <div>{{vm.customer.delivery.method}} at {{vm.customer.delivery.address}}</div>\n\n    <h3>Kids:</h3>\n    <ul>\n      <li ng-repeat="kid in vm.customer.kids">{{kid.name}}, teacher: {{kid.teacher.name}}, {{kid.teacher.grade}}, {{kid.teacher._id}}</li>\n    </ul>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.customer.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="customers.edit({ customerId: vm.customer._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Created on\n      <span ng-bind="vm.customer.createdAt | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.customer.user"\n            ng-bind="vm.customer.user.displayName"></span>\n      <span ng-if="!vm.customer.user">anonymous user</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.customer.content"></p>\n</section>\n'),$templateCache.put("modules/customquestions/views/form-customquestion.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.customquestion._id ? \'Edit custom question\' : \'New custom question\'}}</h1>\n    <h3>{{vm.customquestion.teachername}}</h3>\n\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.customquestionForm" class="form-horizontal" ng-submit="vm.save(vm.form.customquestionForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="message">Question for {{vm.convertDate(\'dddd, MMMM Do YYYY\')}}</label>\n          <input name="message" type="text" ng-model="vm.customquestion.message" id="message" class="form-control"\n          placeholder="What would you like your students to ask their parents on {{vm.convertDate(\'dddd\')}}?" required>\n          <div ng-messages="vm.form.customquestionForm.message.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Question text is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.customquestion._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/customquestions/views/list-customquestions.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Custom questions</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="customquestion in vm.customquestions"\n       ui-sref="customquestions.view({ customquestionId: customquestion._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Created by\n        <span ng-bind="customquestion.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="customquestion.user" ng-bind="customquestion.user.displayName"></span>\n        <span ng-if="!customquestion.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="customquestion.message"></h4>\n      <p class="list-group-item-heading" ng-bind="customquestion.teacher[0].name"></p>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.customquestions.$resolved && !vm.customquestions.length">\n    No Customquestions yet, why don\'t you <a ui-sref="customquestions.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/customquestions/views/view-customquestion.client.view.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.customquestion.message"></h1>\n    <h3 ng-bind="vm.customquestion.date"></h3>\n    <h3 ng-bind="vm.customquestion.teacher[0].name"></h3>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.customquestion.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="customquestions.edit({ customquestionId: vm.customquestion._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Created\n      <span ng-bind="vm.customquestion.createdAt | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.customquestion.user"\n            ng-bind="vm.customquestion.user.displayName"></span>\n      <span ng-if="!vm.customquestion.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.customquestion.content"></p>\n</section>\n'),$templateCache.put("modules/schools/views/form-school.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.school._id ? \'Edit School\' : \'New School\'}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.schoolForm" class="form-horizontal" ng-submit="vm.save(vm.form.schoolForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="name">Name</label>\n          <input name="name" type="text" ng-model="vm.school.name" id="name" class="form-control" placeholder="Name" required>\n          <div ng-messages="vm.form.schoolForm.name.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">School name is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.school._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/schools/views/form-signup.client.view.html",'<section>\n  <div class="text-center">\n    <h2>Sign up for HWYD @ {{vm.school.name}}!</h2>\n  </div>\n  <div class="col-sm-4 col-sm-offset-4">\n    <form name="vm.form.customerForm" class="form-horizontal" ng-submit="vm.saveCustomer(vm.form.customerForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group">\n          <div class="col-xs-12">\n            <label class="control-label" for="time">Send me a conversation starter at...</label>\n          </div>\n          <div class="col-xs-5 visible-xs-block">e.g. before meeting the bus, picking up, or eating dinner</div>\n          <div class="col-xs-7 col-sm-12">\n            <div timepicker ng-model="vm.customer.delivery.time" ng-change="changed()" hour-step="1" minute-step="5" show-meridian="true"></div>\n          <div class="col-sm-12 hidden-xs">e.g. before meeting the bus, picking up, or eating dinner</div>\n          </div>\n        </div>\n\n        <div class="form-group" show-errors>\n          <input type="email" id="email" name="email" class="form-control" ng-model="vm.customer.email" placeholder="my email address" lowercase required autofocus>\n          <div ng-messages="vm.form.customerForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n\n        <div ng-repeat="item in vm.customer.kids">\n          <div class="form-group" show-errors>\n            <input name="kidname{{$index}}" type="text" ng-model="vm.customer.kids[$index].name" id="kidname{{$index}}" class="form-control" placeholder="Child\'s first name" required>\n          </div>\n\n          <div class="form-group" show-errors>\n            <ui-select name="teacher{{$index}}" id="teacher{{$index}}" class="" ng-model="vm.customer.kids[$index].teacher" theme="bootstrap" required>\n              <ui-select-match placeholder="Select teacher...">{{$select.selected.name}}</ui-select-match>\n              <ui-select-choices repeat="item in vm.school.teachers | filter: $select.search">\n                <div ng-bind-html="item.name | highlight: $select.search"></div>\n              </ui-select-choices>\n            </ui-select>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <a class="btn btn-default" href="#" ng-click="vm.addKid()" role="button">Add another child</a>\n        </div>\n\n        <div class="form-group pull-right">\n          <button type="submit" class="btn btn-primary btn-lg">{{vm.customer._id ? \'Update\' : \'Submit\'}}</button>\n        </div>\n\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/schools/views/list-schools.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Schools</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="school in vm.schools"\n       ui-sref="schools.view({ schoolId: school._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="school.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="school.user" ng-bind="school.user.displayName"></span>\n        <span ng-if="!school.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="school.name"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.schools.$resolved && !vm.schools.length">\n    No Schools yet, why don\'t you <a ui-sref="schools.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/schools/views/view-school.client.view.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.school.name"></h1>\n    <ul>\n      <li ng-repeat="teacher in vm.school.teachers">{{teacher.name}}</li>\n    </ul>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.school.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="schools.edit({ schoolId: vm.school._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.school.created | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.school.user"\n            ng-bind="vm.school.user.displayName"></span>\n      <span ng-if="!vm.school.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.school.content"></p>\n</section>\n'),$templateCache.put("modules/teachers/views/form-question.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.customQuestion() ? \'Change your question for \' : \'Add a new question for \'}}{{vm.date(\'dddd\')}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.questionForm" class="form-horizontal" ng-submit="vm.saveQuestion(vm.form.questionForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group">\n          <label class="control-label" for="question">{{vm.date(\'dddd, MMMM Do YYYY\')}}</label>\n          <input name="question" type="text" ng-model="vm.customQuestion()" id="question" class="form-control"\n          placeholder="What would you like your students to ask their parents?" required>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.customQuestion() ? \'Submit\' : \'Add\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/teachers/views/form-teacher.client.view.html",'<section>\n  <div class="page-header">\n    <h1>{{vm.teacher._id ? \'Edit Teacher\' : \'New Teacher\'}}</h1>\n  </div>\n  <div class="col-md-12">\n    <form name="vm.form.teacherForm" class="form-horizontal" ng-submit="vm.save(vm.form.teacherForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="name">Name</label>\n          <input name="name" type="text" ng-model="vm.teacher.name" id="name" class="form-control" placeholder="Name" required>\n          <div ng-messages="vm.form.teacherForm.name.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Teacher name is required.</p>\n          </div>\n        </div>\n        <div class="form-group">\n          <button type="submit" class="btn btn-default">{{vm.teacher._id ? \'Update\' : \'Create\'}}</button>\n        </div>\n        <div ng-show="vm.error" class="text-danger">\n          <strong ng-bind="vm.error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/teachers/views/list-teachers.client.view.html",'<section>\n  <div class="page-header">\n    <h1>Teachers</h1>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="teacher in vm.teachers"\n       ui-sref="teachers.view({ teacherId: teacher._id })"\n       class="list-group-item">\n      <small class="list-group-item-text">\n        Posted on\n        <span ng-bind="teacher.created | date:\'mediumDate\'"></span>\n        by\n        <span ng-if="teacher.user" ng-bind="teacher.user.displayName"></span>\n        <span ng-if="!teacher.user">Deleted User</span>\n      </small>\n      <h4 class="list-group-item-heading" ng-bind="teacher.name"></h4>\n    </a>\n  </div>\n  <div class="alert alert-warning text-center" ng-if="vm.teachers.$resolved && !vm.teachers.length">\n    No Teachers yet, why don\'t you <a ui-sref="teachers.create">create one</a>?\n  </div>\n</section>\n'),$templateCache.put("modules/teachers/views/view-teacher.client.view.html",'<section>\n  <div class="page-header">\n    <h1 ng-bind="vm.teacher.name"></h1>\n  </div>\n  <div class="pull-right"\n       ng-show="vm.teacher.isCurrentUserOwner">\n    <a class="btn btn-primary"\n       ui-sref="teachers.edit({ teacherId: vm.teacher._id })">\n      <i class="glyphicon glyphicon-edit"></i>\n    </a>\n    <a class="btn btn-primary" ng-click="vm.remove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </a>\n  </div>\n  <small>\n    <em class="text-muted">\n      Posted on\n      <span ng-bind="vm.teacher.created | date:\'mediumDate\'"></span>\n      by\n      <span ng-if="vm.teacher.user"\n            ng-bind="vm.teacher.user.displayName"></span>\n      <span ng-if="!vm.teacher.user">Deleted User</span>\n    </em>\n  </small>\n  <p class="lead" ng-bind="vm.teacher.content"></p>\n</section>\n'),$templateCache.put("modules/users/views/admin/edit-user.client.view.html",'<section>\n  <div class="page-header">\n    <h1>User <span ng-bind="user.username"></span></h1>\n  </div>\n  <div class="col-md-12">\n    <form name="userForm" ng-submit="update(userForm.$valid)" novalidate>\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="user.firstName" placeholder="First Name" required />\n          <div ng-messages="userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="user.lastName" placeholder="Last Name" required />\n          <div ng-messages="userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label class="control-label" for="roles">Roles</label>\n          <div class="controls">\n            <input class="form-control" type="text" name="roles" ng-model="user.roles" id="roles" ng-list required />\n            <div ng-messages="userForm.roles.$error" role="alert">\n              <p class="help-block error-text" ng-message="required">At least one role is required.</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group">\n          <input type="submit" value="Update" class="btn btn-default">\n        </div>\n        <div ng-show="error" class="text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/admin/list-users.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-4">\n        <h1>Users</h1>\n      </div>\n      <div class="col-md-4" style="margin-top: 2em">\n        <input class="form-control col-md-4" type="text" ng-model="search" placeholder="Search" ng-change="figureOutItemsToDisplay()" />\n      </div>\n    </div>\n  </div>\n  <div class="list-group">\n    <a ng-repeat="user in pagedItems" ui-sref="admin.user({userId: user._id})" class="list-group-item">\n      <h4 class="list-group-item-heading" ng-bind="user.username"></h4>\n      <p class="list-group-item-text pull-right small" ng-bind="user.roles"></p>\n      <p class="list-group-item-text" ng-bind="user.email"></p>\n    </a>\n  </div>\n\n  <pagination boundary-links="true" max-size="8" items-per-page="itemsPerPage" total-items="filterLength" ng-model="currentPage" ng-change="pageChanged()"></pagination>\n</section>\n'),$templateCache.put("modules/users/views/admin/view-user.client.view.html",'<section>\n  <div class="page-header">\n    <div class="row">\n      <div class="col-md-6">\n        <h1 ng-bind="user.username"></h1>\n      </div>\n      <div class="col-md-4">\n        <a class="btn btn-primary" ui-sref="admin.user-edit({userId: user._id})">\n          <i class="glyphicon glyphicon-edit"></i>\n        </a>\n        <a class="btn btn-primary" ng-click="remove();" ng-if="user._id !== authentication.user._id">\n          <i class="glyphicon glyphicon-trash"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col-md-8">\n      <div class="row">\n        <div class="col-md-3"><strong>First Name</strong></div>\n        <div class="col-md-6" ng-bind="user.firstName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Last Name</strong></div>\n        <div class="col-md-6" ng-bind="user.lastName"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Email</strong></div>\n        <div class="col-md-6" ng-bind="user.email"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Provider</strong></div>\n        <div class="col-md-6" ng-bind="user.provider"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Created</strong></div>\n        <div class="col-md-6" ng-bind="user.created"></div>\n      </div>\n      <hr/>\n      <div class="row">\n        <div class="col-md-3"><strong>Roles</strong></div>\n        <div class="col-md-6" ng-bind="user.roles"></div>\n      </div>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/authentication/authentication.client.view.html",'<section class="row" ng-controller="AuthenticationController">\n  <h3 class="col-md-12 text-center">Sign in using your social accounts</h3>\n  <div class="col-md-12 text-center">\n    <img ng-click="callOauthProvider(\'/api/auth/facebook\')" ng-src="/modules/users/client/img/buttons/facebook.png">\n    <img ng-click="callOauthProvider(\'/api/auth/twitter\')" ng-src="/modules/users/client/img/buttons/twitter.png">\n    <img ng-click="callOauthProvider(\'/api/auth/google\')" ng-src="/modules/users/client/img/buttons/google.png">\n    <img ng-click="callOauthProvider(\'/api/auth/linkedin\')" ng-src="/modules/users/client/img/buttons/linkedin.png">\n    <img ng-click="callOauthProvider(\'/api/auth/github\')" ng-src="/modules/users/client/img/buttons/github.png">\n    <img ng-click="callOauthProvider(\'/api/auth/paypal\')"  ng-src="/modules/users/client/img/buttons/paypal.png">\n  </div>\n  <div ui-view></div>\n</section>\n'),$templateCache.put("modules/users/views/authentication/signin.client.view.html",'<div ng-controller="AuthenticationController">\n  <h3 class="col-md-12 text-center">Or with your account</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="userForm" ng-submit="signin(userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\n          <div ng-messages="userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n          <input type="password" id="password" name="password" class="form-control" ng-model="credentials.password" placeholder="Password" required>\n          <div ng-messages="userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign in</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signup">Sign up</a>\n        </div>\n        <div class="text-center forgot-password">\n          <a ui-sref="password.forgot">Forgot your password?</a>\n        </div>\n        <alert type="danger" ng-show="error" class="text-center text-danger">\n          <span ng-bind="error"></span>\n        </alert>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),
$templateCache.put("modules/users/views/authentication/signup.client.view.html",'<div ng-controller="AuthenticationController">\n  <h3 class="col-md-12 text-center">Or sign up using your email</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="userForm" ng-submit="signup(userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="credentials.firstName" placeholder="First Name" required>\n          <div ng-messages="userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="credentials.lastName" placeholder="Last Name" required>\n          <div ng-messages="userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="credentials.email" placeholder="Email" lowercase required>\n          <div ng-messages="userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\n          <div ng-messages="userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="password">Password</label>\n            <input type="password" id="password" name="password" class="form-control" ng-model="credentials.password" placeholder="Password" popover="{{popoverMsg}}" popover-trigger="focus" password-validator required>\n          <div ng-messages="userForm.password.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Password is required.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="userForm.password.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!userForm.password.$error.required">\n          <label>Password Requirements</label>\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Sign up</button>\n          &nbsp; or&nbsp;\n          <a ui-sref="authentication.signin" class="show-signup">Sign in</a>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n'),$templateCache.put("modules/users/views/password/forgot-password.client.view.html",'<section class="row" ng-controller="PasswordController">\n  <h3 class="col-md-12 text-center">Restore your password</h3>\n  <p class="small text-center">Enter your account username.</p>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-5 col-md-2">\n    <form name="forgotPasswordForm" ng-submit="askForPasswordReset(forgotPasswordForm.$valid)" class="form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <input type="text" id="username" name="username" class="form-control" ng-model="credentials.username" placeholder="Username" lowercase required>\n          <div ng-messages="forgotPasswordForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a username.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Submit</button>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong ng-bind="success"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/password/reset-password-invalid.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password reset is invalid</h3>\n  <a ui-sref="password.forgot" class="col-md-12">Ask for a new password reset</a>\n</section>\n'),$templateCache.put("modules/users/views/password/reset-password-success.client.view.html",'<section class="row text-center">\n  <h3 class="col-md-12">Password successfully reset</h3>\n  <a ui-sref="home" class="col-md-12">Continue to home page</a>\n</section>\n'),$templateCache.put("modules/users/views/password/reset-password.client.view.html",'<section class="row" ng-controller="PasswordController">\n  <h3 class="col-md-12 text-center">Reset your password</h3>\n  <div class="col-xs-offset-2 col-xs-8 col-md-offset-4 col-md-4">\n    <form name="resetPasswordForm" ng-submit="resetUserPassword(resetPasswordForm.$valid)" class="signin form-horizontal" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="passwordDetails.newPassword" placeholder="New Password" autocomplete="new-password" popover="{{popoverMsg}}" popover-trigger="focus" popover-placement="top" password-validator required>\n          <div ng-messages="resetPasswordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="resetPasswordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="passwordDetails.newPassword" required>\n          <div ng-messages="resetPasswordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter the password again to verify.</p>\n            <p class="help-block error-text" ng-show=resetPasswordForm.verifyPassword.$error.passwordVerify>Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!resetPasswordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Update Password</button>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong ng-bind="success"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/change-password.client.view.html",'<section class="row" ng-controller="ChangePasswordController">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="passwordForm" ng-submit="changeUserPassword(passwordForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="currentPassword">Current Password</label>\n          <input type="password" id="currentPassword" name="currentPassword" class="form-control" ng-model="passwordDetails.currentPassword" placeholder="Current Password" required>\n          <div ng-messages="passwordForm.currentPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Your current password is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="newPassword">New Password</label>\n          <input type="password" id="newPassword" name="newPassword" class="form-control" ng-model="passwordDetails.newPassword" placeholder="New Password" popover="{{popoverMsg}}" popover-trigger="focus" password-validator required>\n          <div ng-messages="passwordForm.newPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Enter a new password.</p>\n            <div ng-repeat="passwordError in passwordErrors">\n              <p class="help-block error-text" ng-show="passwordForm.newPassword.$error.requirements">{{passwordError}}</p>\n            </div>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="verifyPassword">Verify Password</label>\n          <input type="password" id="verifyPassword" name="verifyPassword" class="form-control" ng-model="passwordDetails.verifyPassword" placeholder="Verify Password" password-verify="passwordDetails.newPassword" required>\n          <div ng-messages="passwordForm.verifyPassword.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Verify your new password.</p>\n            <p class="help-block error-text" ng-show=passwordForm.verifyPassword.$error.passwordVerify>Passwords do not match.</p>\n          </div>\n        </div>\n        <div class="form-group" ng-show="!passwordForm.newPassword.$error.required">\n          <label>Password Requirements</label>\n          <progressbar value="requirementsProgress" type="{{requirementsColor}}"><span style="color:white; white-space:nowrap;">{{requirementsProgress}}%</span></progressbar>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Password</button>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong>Password Changed Successfully</strong>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/change-profile-picture.client.view.html",'<section class="row" ng-controller="ChangeProfilePictureController">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-3 col-md-4">\n    <form class="signin form-horizontal">\n      <fieldset>\n        <div class="form-group text-center">\n          <img ng-src="{{imageURL}}" alt="{{user.displayName}}" class="img-thumbnail user-profile-picture">\n        </div>\n        <div class="text-center form-group" ng-hide="uploader.queue.length">\n          <span class="btn btn-default btn-file">\n              Select Image <input type="file" nv-file-select uploader="uploader">\n          </span>\n        </div>\n        <div class="text-center form-group" ng-show="uploader.queue.length">\n          <button class="btn btn-primary" ng-click="uploadProfilePicture();">Upload</button>\n          <button class="btn btn-default" ng-click="cancelUpload();">Cancel</button>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong>Profile Picture Changed Successfully</strong>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/edit-profile.client.view.html",'<section class="row" ng-controller="EditProfileController">\n  <div class="col-xs-offset-1 col-xs-10 col-md-offset-4 col-md-4">\n    <form name="userForm" ng-submit="updateUserProfile(userForm.$valid)" class="signin" novalidate autocomplete="off">\n      <fieldset>\n        <div class="form-group" show-errors>\n          <label for="firstName">First Name</label>\n          <input type="text" id="firstName" name="firstName" class="form-control" ng-model="user.firstName" placeholder="First Name" required>\n          <div ng-messages="userForm.firstName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">First name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="lastName">Last Name</label>\n          <input type="text" id="lastName" name="lastName" class="form-control" ng-model="user.lastName" placeholder="Last Name" required>\n          <div ng-messages="userForm.lastName.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Last name is required.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="email">Email</label>\n          <input type="email" id="email" name="email" class="form-control" ng-model="user.email" placeholder="Email" lowercase required>\n          <div ng-messages="userForm.email.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Email address is required.</p>\n            <p class="help-block error-text" ng-message="email">Email address is invalid.</p>\n          </div>\n        </div>\n        <div class="form-group" show-errors>\n          <label for="username">Username</label>\n          <input type="text" id="username" name="username" class="form-control" ng-model="user.username" placeholder="Username" lowercase required>\n          <div ng-messages="userForm.username.$error" role="alert">\n            <p class="help-block error-text" ng-message="required">Username is required.</p>\n          </div>\n        </div>\n        <div class="text-center form-group">\n          <button type="submit" class="btn btn-primary">Save Profile</button>\n        </div>\n        <div ng-show="success" class="text-center text-success">\n          <strong>Profile Saved Successfully</strong>\n        </div>\n        <div ng-show="error" class="text-center text-danger">\n          <strong ng-bind="error"></strong>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/manage-social-accounts.client.view.html",'<section class="row" ng-controller="SocialAccountsController">\n  <h3 class="col-md-12 text-center" ng-show="hasConnectedAdditionalSocialAccounts()">Connected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <div ng-repeat="(providerName, providerData) in user.additionalProvidersData" class="social-account-container">\n      <img ng-src="/modules/users/client/img/buttons/{{providerName}}.png">\n      <a class="btn btn-danger btn-remove-account" ng-click="removeUserSocialAccount(providerName)">\n        <i class="glyphicon glyphicon-trash"></i>\n      </a>\n    </div>\n  </div>\n  <h3 class="col-md-12 text-center" ng-show="hasConnectedAdditionalSocialAccounts()">Unconnected social accounts:</h3>\n  <div class="col-md-12 text-center">\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'facebook\')">\n      <img ng-src="/modules/users/client/img/buttons/facebook.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/facebook" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'twitter\')">\n      <img ng-src="/modules/users/client/img/buttons/twitter.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/twitter" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'google\')">\n      <img ng-src="/modules/users/client/img/buttons/google.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/google" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'linkedin\')">\n      <img ng-src="/modules/users/client/img/buttons/linkedin.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/linkedin" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'github\')">\n      <img ng-src="/modules/users/client/img/buttons/github.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/github" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n    <div class="social-account-container" ng-hide="isConnectedSocialAccount(\'paypal\')">\n      <img ng-src="/modules/users/client/img/buttons/paypal.png">\n      <a class="btn btn-success btn-remove-account" href="/api/auth/paypal" target="_self">\n        <i class="glyphicon glyphicon-plus"></i>\n      </a>\n    </div>\n  </div>\n</section>\n'),$templateCache.put("modules/users/views/settings/settings.client.view.html",'<section ng-controller="SettingsController">\n  <div class="page-header">\n    <h1>Settings</h1>\n  </div>\n  <div class="row">\n    <nav class="col-sm-3 col-md-3">\n      <ul class="nav nav-pills nav-stacked">\n        <li ui-sref-active="active">\n          <a ui-sref="settings.profile">Edit Profile</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.picture">Change Profile Picture</a>\n        </li>\n        <li ui-sref-active="active" ng-show="user.provider === \'local\'">\n          <a ui-sref="settings.password">Change Password</a>\n        </li>\n        <li ui-sref-active="active">\n          <a ui-sref="settings.accounts">Manage Social Accounts</a>\n        </li>\n      </ul>\n    </nav>\n    <div class="col-sm-9 col-md-8 settings-view">\n      <div ui-view></div>\n    </div>\n  </div>\n</section>\n')}angular.module("core").run(templates),templates.$inject=["$templateCache"]}();